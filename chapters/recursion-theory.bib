@InProceedings{10.1007/11784180_8,
author="Bonfante, Guillaume",
editor="Johnson, Michael
and Vene, Varmo",
title="Some Programming Languages for Logspace and Ptime",
booktitle="Algebraic Methodology and Software Technology",
year="2006",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="66--80",
abstract="We propose two characterizations of complexity classes by means of programming languages. The first concerns Logspace while the second leads to Ptime. This latter characterization shows that adding a choice command to a Ptime language (the language WHILE of Jones [1]) may not necessarily provide NPtime computations. The result is close to Cook in [2] who used ``auxiliary push-down automata''. Logspace is obtained through a decidable mechanism of tiering. It is based on an analysis of deforestation due to Wadler in [3]. We get also a characterization of NLogspace.",
isbn="978-3-540-35636-3"
}

@article{10.1007/BF01201998,
author = {Bellantoni, Stephen and Cook, Stephen},
title = {A new recursion-theoretic characterization of the polytime functions},
year = {1992},
issue_date = {1992},
publisher = {Birkhauser Verlag},
address = {CHE},
volume = {2},
number = {2},
issn = {1016-3328},
url = {https://doi.org/10.1007/BF01201998},
doi = {10.1007/BF01201998},
journal = {Comput. Complex.},
month = {dec},
pages = {97--110},
numpages = {14},
keywords = {Cobham, polynomial time, recursion theory}
}

@article{10.1016/j.ic.2015.12.009,
author = {Bonfante, Guillaume and Kahle, Reinhard and Marion, Jean-Yves and Oitavem, Isabel},
title = {Two function algebras defining functions in NC$^{k}$ Boolean circuits},
year = {2016},
issue_date = {June 2016},
publisher = {Academic Press, Inc.},
address = {USA},
volume = {248},
number = {C},
issn = {0890-5401},
url = {https://doi.org/10.1016/j.ic.2015.12.009},
doi = {10.1016/j.ic.2015.12.009},
abstract = {We describe the functions computed by Boolean circuits in $\mathrm{NC}^{k}$ by means of function algebras for $k \ge 1$ in the spirit of implicit computational complexity. The whole hierarchy defines $\mathrm{NC}$. In other words, we give a recursion-theoretic characterization of the complexity classes $\mathrm{NC}^{k}$ for $k \ge 1$ without reference to a machine model nor explicit bounds in the recursion schema. We present two equivalent descriptions of the classes $\mathrm{NC}^{k}$, $k \ge 1$: one based on a tree structure \`{a} la Leivant, the other based on words. The latter highlights the role of pointer computation in circuit complexity, and we show that transducers are a key concept for pointer evaluation.},
journal = {Inf. Comput.},
month = jun,
pages = {82--103},
numpages = {22},
keywords = {Transducers, Parallel computation class, NC$^{k}$, Boolean circuits}
}

@article{10.1145/1008293.1008295,
author = {Lind, John and Meyer, Albert R.},
title = {A characterization of log-space computable functions},
year = {1973},
issue_date = {July 1973},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {5},
number = {3},
issn = {0163-5700},
url = {https://doi.org/10.1145/1008293.1008295},
doi = {10.1145/1008293.1008295},
journal = {SIGACT News},
month = jul,
pages = {26--29},
numpages = {4}
}

@INPROCEEDINGS{151625,
  author={Leivant, D.},
  booktitle={[1991] Proceedings Sixth Annual IEEE Symposium on Logic in Computer Science}, 
  title={A foundational delineation of computational feasibility}, 
  year={1991},
  pages={2-11},
  keywords={Logic;Polynomials;Quantum computing;H infinity control;Stability;Equations;Head;Automata;Arithmetic;Testing},
  doi={10.1109/LICS.1991.151625}}

@INPROCEEDINGS{4568079,
  author={Gurevich, Yuri},
  booktitle={24th Annual Symposium on Foundations of Computer Science (sfcs 1983)}, 
  title={Algebras of feasible functions}, 
  year={1983},
  pages={210-214},
  keywords={Algebra;Logic;Databases;Computer science},
  doi={10.1109/SFCS.1983.5}}

@article{ALLEN19911,
title = {Arithmetizing Uniform NC},
journal = {Annals of Pure and Applied Logic},
volume = {53},
number = {1},
pages = {1-50},
year = {1991},
issn = {0168-0072},
doi = {https://doi.org/10.1016/0168-0072(91)90057-S},
url = {https://www.sciencedirect.com/science/article/pii/016800729190057S},
author = {Bill Allen},
abstract = {Allen, B., Arithmetizing Uniform NC, Annals of Pure and Applied Logic 53 (1991) 1--50. We give a characterization of the complexity class Uniform NC as an algebra of functions on the natural numbers which is the closure of several basic functions under composition and a schema of recursion. We then define a fragment of bounded arithmetic, and, using our characterization of Uniform NC, show that this fragment is capable of proving the totality of all of the functions in Uniform NC. Lastly, in the spirit of Buss, we show that any function which is definable by a ∑b1-formula in our theory is a function which is in Uniform NC.}
}

@article{COMPTON1990241,
title = {An algebra and a logic for NC1},
journal = {Information and Computation},
volume = {87},
number = {1},
pages = {241-263},
year = {1990},
note = {Special Issue: Selections from 1988 IEEE Symposium on Logic in Computer Science},
issn = {0890-5401},
doi = {https://doi.org/10.1016/0890-5401(90)90063-N},
url = {https://www.sciencedirect.com/science/article/pii/089054019090063N},
author = {Kevin J. Compton and Claude Laflamme},
abstract = {Presented here are an algebra and a logic characterizing the complexity class NC1, which consists of functions computed by uniform families of polynomial size, log depth circuits. In both characterizations, NC1 functions are regarded as functions from one class of finite relational structures to another. In the algebraic characterization a recursion scheme called upward tree recursion is applied to a class of simple functions. In the logical characterization, first-order logic is augmented by an operator for defining relations by primitive recursion where it is assumed that every structure has an underlying relation BIT giving the binary representations of integers.}
}

@incollection{Cobham1964-COBTIC,
	author = {Alan Cobham},
	booktitle = {Logic, methodology and philosophy of science},
	editor = {Yehoshua Bar{-}Hillel},
	pages = {24--30},
	publisher = {North-Holland Pub. Co.},
	title = {The Intrinsic Computational Difficulty of Functions},
	year = {1964},
  url = {https://web.archive.org/web/20240121142633/https://www.cs.toronto.edu/~sacook/homepage/cobham_intrinsic.pdf}
}

@Inbook{DalLago2012,
author="Dal Lago, Ugo",
editor="Bezhanishvili, Nick
and Goranko, Valentin",
title="A Short Introduction to Implicit Computational Complexity",
bookTitle="Lectures on Logic and Computation: ESSLLI 2010 Copenhagen, Denmark, August 2010, ESSLLI 2011, Ljubljana, Slovenia, August 2011, Selected Lecture Notes",
year="2012",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="89--109",
abstract="These lecture notes are meant to serve as a short introduction to implicit computational complexity for those students who have little or no knowledge of recursion theory and proof theory. They have been obtained by enriching and polishing a set of notes the author wrote for a course (on the same subject) he gave at ESSLLI 2010. These notes are definitely not meant to be comprehensive nor exhaustive, but on the other hand much effort has been done to keep them self-contained.",
isbn="978-3-642-31485-8",
doi="10.1007/978-3-642-31485-8_3",
url="https://doi.org/10.1007/978-3-642-31485-8_3"
}

@article{JONES1999151,
title = {LOGSPACE and PTIME characterized by programming languages},
journal = {Theoretical Computer Science},
volume = {228},
number = {1},
pages = {151-174},
year = {1999},
issn = {0304-3975},
doi = {https://doi.org/10.1016/S0304-3975(98)00357-0},
url = {https://www.sciencedirect.com/science/article/pii/S0304397598003570},
author = {Neil D. Jones},
keywords = {Complexity, Read-only programs, Cons-free programs},
abstract = {A programming approach to computability and complexity theory yields more natural definitions and proofs of central results than the classical approach. Further, some new results can be obtained using this viewpoint. This paper contains new intrinsic characterizations of the well-known complexity classes PTIME and LOGSPACE, with no externally imposed resource bounds on time or space. LOGSPACE is proven identical with the decision problems solvable by read-only imperative programs on Lisp-like lists; and PTIME is proven identical with the problems solvable by recursive read-only programs.}
}

@article{MURAWSKI2004197,
title = {On an interpretation of safe recursion in light affine logic},
journal = {Theoretical Computer Science},
volume = {318},
number = {1},
pages = {197-223},
year = {2004},
note = {Implicit Computational Complexity},
issn = {0304-3975},
doi = {https://doi.org/10.1016/j.tcs.2003.10.017},
url = {https://www.sciencedirect.com/science/article/pii/S030439750300522X},
author = {A.S. Murawski and C.-H.L. Ong},
keywords = {Computational complexity, Light affine logic, Polynomial-time computability},
abstract = {We introduce a subalgebra BC− of Bellantoni and Cook's safe-recursion function algebra BC. Functions of the subalgebra have safe arguments that are non-contractible (i.e non-duplicable). We propose a definition of safe and normal variables in light affine logic (LAL), and show that BC− is the largest subalgebra that is interpretable in LAL, relative to that definition. Though BC− itself is not PF complete, there are extensions of it (by additional schemes for defining functions with safe arguments) that are, and are still interpretable in LAL and so preserve PF closure. We focus on one such which is BC− augmented by a definition-by-cases construct and a restricted form of definition-by-recursion scheme over safe arguments. As a corollary we obtain a new proof of the PF completeness of LAL.}
}

@article{NIGGL201047,
title = {Implicit characterizations of FPTIME and NC revisited},
journal = {The Journal of Logic and Algebraic Programming},
volume = {79},
number = {1},
pages = {47-60},
year = {2010},
note = {Special Issue: Logic, Computability and Topology in Computer Science: A New Perspective for Old Disciplines},
issn = {1567-8326},
doi = {https://doi.org/10.1016/j.jlap.2009.02.005},
url = {https://www.sciencedirect.com/science/article/pii/S1567832609000113},
author = {Karl-Heinz Niggl and Henning Wunderlich},
keywords = {Bounded and ramified forms of recursion, Function algebra, Implicit computational complexity, NC, Polynomial-time computability},
abstract = {Various simplified or improved, and partly corrected well-known implicit characterizations of the complexity classes FPTIME and NC are presented. Primarily, the interest is in simplifying the required simulations of various recursion schemes in the corresponding (implicit) framework, and in developing those simulations in a more uniform way, based on a step-by-step comparison technique, thus consolidating groundwork in implicit computational complexity.}
}

@inbook{Oitavem+2010+355+362,
url = {https://doi.org/10.1515/9783110324907.355},
title = {Logspace without Bounds},
booktitle = {Ways of Proof Theory},
author = {Isabel Oitavem},
editor = {Ralf Schindler},
publisher = {De Gruyter},
address = {Berlin, Boston},
pages = {355--362},
doi = {10.1515/9783110324907.355},
isbn = {9783110324907},
year = {2010},
urldate = {2025-08-27}
}

@article{bloch1994function,
  author    = {Stephen Bloch},
  title     = {Function-algebraic characterizations of log and polylog parallel time},
  journal   = {Computational Complexity},
  volume    = {4},
  number    = {2},
  pages     = {175--205},
  year      = {1994},
  month     = jun,
  doi       = {10.1007/BF01202288},
  url       = {https://doi.org/10.1007/BF01202288},
  issn      = {1420-8954},
  abstract  = {The main results of this paper are recursion-theoretic characterizations of two parallel complexity classes: the functions computable by uniform bounded fan-in circuit families of log and polylog depth (or equivalently, the functions bitwise computable by alternating Turing machines in log and polylog time). The present characterizations avoid the complex base functions, function constructors, and a priori size or depth bounds typical of previous work on these classes. This simplicity is achieved by extending the “tiered recursion” techniques of Leivant and Bellantoni \& Cook.}
}

@article{doi:10.1137/0216051,
author = {Immerman, Neil},
title = {Languages that Capture Complexity Classes},
journal = {SIAM Journal on Computing},
volume = {16},
number = {4},
pages = {760-778},
year = {1987},
doi = {10.1137/0216051},
URL = {https://doi.org/10.1137/0216051},
eprint = {https://doi.org/10.1137/0216051},
    abstract = { We present a series of operators of apparently increasing power which when added to first-order logic produce a series of languages in which exactly the properties checkable in a certain complexity class may be expressed. We thus give alternate characterizations of most important complexity classes. We also introduce reductions appropriate for our setting: first-order translations, and a restricted, quantifier free version of these called projection translations. We show that projection translations are a uniform version of Valiant's projections, and that the usual complete problems remain complete via these very restrictive reductions. }
}

@misc{hofmann2006logspace,
  author       = {Martin Hofmann},
  title        = {Programming Languages for Logarithmic Space},
  howpublished = {Presentation at GEOCAL '06, Spitalfields Day, Luminy},
  institution  = {LMU München},
  year         = {2006},
  month        = {February 13},
  note         = {Geometric Complexity and Language (GEOCAL) Workshop},
  url          = {https://web.archive.org/web/20240714044259/https://www-lipn.univ-paris13.fr/~baillot/GEOCAL06/SLIDES/Hofmann1302.pdf}
}

@article{kristiansen2005neat,
  author    = {Lars Kristiansen},
  title     = {Neat function algebraic characterizations of logspace and linspace},
  journal   = {Computational Complexity},
  volume    = {14},
  number    = {1},
  pages     = {72--88},
  year      = {2005},
  month     = apr,
  doi       = {10.1007/s00037-005-0191-0},
  url       = {https://doi.org/10.1007/s00037-005-0191-0},
  issn      = {1420-8954},
  abstract  = {We characterize complexity classes by function algebras that neither contain bounds nor any kind of variable segregation. The class of languages decidable in logarithmic space is characterized by the closure of a neat class of initial functions (projections and constants) under composition and simultaneous recursion on notation. We give a similar characterization of the class of number-theoretic 0-1 valued functions computable in linear space using simultaneous recursion on natural numbers in place of simultaneous recursion on notation.}
}

@article{kristiansenvoda2005,
author = {Kristiansen, Lars and Voda, Paul J.},
title = {Programming languages capturing complexity classes},
year = {2005},
issue_date = {April 2005},
publisher = {Publishing Association Nordic Journal of Computing},
url = {https://www.researchgate.net/publication/220673222_Programming_Languages_Capturing_Complexity_Classes},
address = {Helsinki, Finland},
volume = {12},
number = {2},
issn = {1236-6064},
abstract = {We investigate an imperative and a functional programming language. The computational power of fragments of these languages induce two hierarchies of complexity classes. Our first main theorem says that these hierarchies match, level by level, a complexity-theoretic alternating space-time hierarchy known from the literature. Our second main theorems says that a slightly different complexity-theoretic hierarchy (the Goerdt-Seidl hierarchy) also can be captured by hierarchies induced by fragments of the programming languages. Well known complexity classes like LOGSPACE, LINSPACE, P, PSPACE, etc., occur in the hierarchies.},
journal = {Nordic J. of Computing},
month = {apr},
pages = {89--115},
numpages = {27},
keywords = {complexity classes, computational complexity, higher types, imperative and functional programming languages, typed λ-calculi}
}

@techreport{lind1974logspace,
  author       = {John C. Lind},
  title        = {Computing in Logarithmic Space},
  institution  = {Massachusetts Institute of Technology, Project MAC},
  type         = {Technical Memo},
  number       = {LCS-TM-052},
  year         = {1974},
  month        = {September},
  note         = {Available from MIT DSpace},
  url          = {https://dspace.mit.edu/handle/1721.1/148880}
}

@inproceedings{martini2006implicit1,
  author       = {Simone Martini},
  title        = {Implicit Computational Complexity, part 1},
  booktitle    = {Bertinoro International Spring School for Graduate Studies in Computer Science},
  year         = {2006},
  address      = {Bertinoro, Italy},
  institution  = {Universit\`a di Bologna, Dipartimento di Scienze dell'Informazione},
  month        = {March},
  url          = {http://web.archive.org/web/20240722203715/https://www.cs.unibo.it/~martini/BISS/martini-1.pdf},
  note         = {Accessed: 26 August 2025}
}

@inproceedings{martini2006implicit2,
  author       = {Simone Martini},
  title        = {Implicit Computational Complexity, part 2},
  booktitle    = {Bertinoro International Spring School for Graduate Studies in Computer Science},
  year         = {2006},
  address      = {Bertinoro, Italy},
  institution  = {Universit\`a di Bologna, Dipartimento di Scienze dell'Informazione},
  month        = {March},
  url          = {http://web.archive.org/web/20240807183053/http://www.cs.unibo.it/~martini/BISS/martini-2.pdf},
  note         = {Accessed: 26 August 2025}
}

@inproceedings{martini2006implicit3,
  author       = {Simone Martini},
  title        = {Implicit Computational Complexity, part 3},
  booktitle    = {Bertinoro International Spring School for Graduate Studies in Computer Science},
  year         = {2006},
  address      = {Bertinoro, Italy},
  institution  = {Universit\`a di Bologna, Dipartimento di Scienze dell'Informazione},
  month        = {March},
  url          = {http://web.archive.org/web/20240416100620/http://www.cs.unibo.it/~martini/BISS/martini-3.pdf},
  note         = {Accessed: 26 August 2025}
}

@inproceedings{murawski2000can,
  title={Can safe recursion be interpreted in light logic},
  author={Murawski, Andrzej S and Ong, CHL},
  booktitle={Second International Workshop on Implicit Computational Complexity},
  year={2000}
}

@inproceedings{ronchi2019logic,
  author       = {Simona Ronchi Della Rocca},
  title        = {Logic and Implicit Computational Complexity},
  booktitle    = {12th Panhellenic Logic Symposium},
  year         = {2019},
  address      = {Anogeia, Crete, Greece},
  month        = {June},
  day          = {26--30},
  institution  = {Universit\`a degli Studi di Torino},
  note         = {Emerita Professor},
  url          = {http://web.archive.org/web/20240711151956/http://panhellenic-logic-symposium.org/12/slides/Day1_Ronchi.pdf},
  urldate      = {2025-08-26}
}

@misc{schoepp2006spaceefficiency,
  author       = {Ulrich Schöpp},
  title        = {Space-efficiency and the Geometry of Interaction},
  howpublished = {Presentation at GEOCAL '06, Luminy},
  institution  = {Ludwig-Maximilians-Universität München},
  year         = {2006},
  month        = {February 16},
  note         = {Part of the GEOCAL workshop series},
  url          = {https://web.archive.org/web/20240507113929/https://www-lipn.univ-paris13.fr/~baillot/GEOCAL06/SLIDES/Schoepp.pdf}
}


@book{Adams2011,
  author    = {Adams, Rod},
  title     = {An Early History of Recursive Functions and Computability},
  subtitle  = {From G{\"o}del to Turing},
  date      = {2011-05-28},
  publisher = {Docent Press},
  location  = {Boston},
  pagetotal = {297},
  isbn      = {978-0-9837004-0-1},
  url       = {https://books.google.com/books?id=G9YoeRIVSnwC},
  urldate   = {2025-10-29},
  note      = {Reprint/revision of the author's 1983 Ph.D. thesis},
  origdate  = {1983}
}

@book{Grassmann1861,
  author    = {Hermann Grassmann},
  title     = {Lehrbuch der Arithmetik f{\"u}r h{\"o}here Lehranstalten},
  year      = {1861},
  publisher = {Verlag von T. C. F. Enslin (Adolph Enslin)},
  pages     = {233},
  language  = {German},
  url       = {https://archive.org/details/lehrbuchderarit00grasgoog/page/n48/mode/2up},
}


@book{Dedekind1888,
  author    = {Richard Dedekind},
  title     = {Was sind und was sollen die Zahlen?},
  year      = {1888},
  publisher = {semantics Kommunikationsmanagement GmbH},
  address   = {Aachen},
  url       = {https://archive.org/details/WasSindUndWasSollenDieZahlen},
  note      = {Erstausgabe 1888; Druckausgabe: Braunschweig, 4.~Aufl., 1918.},
  language  = {German}
}

@incollection{Skolem1923-vanHeijenoort,
  author    = {Thoralf Skolem},
  title     = {The foundations of elementary arithmetic established by means of the recursive mode of thought},
  booktitle = {From Frege to G{\"o}del: A Source Book in Mathematical Logic, 1879--1931},
  editor    = {Jean van Heijenoort},
  publisher = {Harvard University Press},
  address   = {Cambridge, MA},
  year      = {1967},
  pages     = {302--333},
  isbn      = {9780674324497},
  note      = {English translation of Skolem's 1923 paper}
}

@inproceedings{10.1145/800196.806014,
author = {Meyer, Albert R. and Ritchie, Dennis M.},
title = {The complexity of loop programs},
year = {1967},
isbn = {9781450374941},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800196.806014},
doi = {10.1145/800196.806014},
abstract = {Anyone familiar with the theory of computability will be aware that practical conclusions from the theory must be drawn with caution. If a problem can theoretically be solved by computation, this does not mean that it is practical to do so. Conversely, if a problem is formally undecidable, this does not mean that the subcases of primary interest are impervious to solution by algorithmic methods.In the next section we describe such a class of programs, called “Loop programs.” Each Loop program consists only of assignment statements and iteration (loop) statements, the latter resembling the DO statement of FORTRAN, and special cases of the FOR and THROUGH statements of ALGOL and MAD. The bound on the running time of a Loop program is determined essentially by the length of the program and the depth of nesting of its loops.},
booktitle = {Proceedings of the 1967 22nd National Conference},
pages = {465-469},
numpages = {5},
location = {Washington, D.C., USA},
series = {ACM '67}
}

@book{Grzegorczyk1953,
  author    = {Andrzej Grzegorczyk},
  title     = {Some Classes of Recursive Functions},
  year      = {1953},
  series    = {Rozprawy Matematyczne = Dissertationes Mathematicae},
  number    = {4},
  publisher = {Panstwowe Wydawnictwo Naukowe},
  address   = {Warsaw},
  issn      = {0860-2581},
  url       = {http://web.archive.org/web/20250806010342/http://matwbn.icm.edu.pl/ksiazki/rm/rm04/rm0401.pdf},
  note      = {Instytut Matematyczny, Polska Akademia Nauk}
}
